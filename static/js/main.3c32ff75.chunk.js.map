{"version":3,"sources":["requests.js","axios.js","Components/Rows/Row/Poster/Poster.js","Components/Rows/Row/Row.js","Components/Rows/Rows.js","Netflix-Logo-PNG3.png","Components/Nav/Nav.js","Components/Header/HeaderButton/HeaderButton.js","Components/Header/HeaderInfo/HeaderInfo.js","Components/Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","request","axios","create","baseURL","Poster","props","timeout","useState","delayFlag","setDelayFlag","trailerUrl","setTrailerUrl","setDelayflagTimeout","useEffect","movieTrailer","movieName","then","response","split","substring","catch","error","console","log","className","onMouseOver","setTimeout","onMouseOut","clearTimeout","style","backgroundImage","src","height","frameBorder","allow","isPoster","alt","onError","e","target","onerror","Row","baseImgUrl","movieList","setMovieList","a","get","getUrl","movies","data","results","getMovies","title","map","movieObject","original_title","original_name","poster_path","backdrop_path","Rows","requestUrls","Nav","scrollFlag","setScrollFlag","scrollEvent","window","pageYOffset","addEventListener","removeEventListener","backgroundColor","NetflixLogo","HeaderButton","label","color","icon","HeaderInfo","info","description","length","search","slice","lastIndexOf","PlayArrowIcon","InfoIcon","Header","headerBack","setHeaderBack","backgroundsObjects","parseInt","Math","random","getRandomBackground","backgroundPath","overview","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6VAAMA,G,YAAU,oCAaDC,EAXE,CACfC,cAAc,8BAAD,OAAgCF,EAAhC,mBACbG,sBAAsB,wBAAD,OAA0BH,EAA1B,sBACrBI,cAAc,4BAAD,OAA8BJ,EAA9B,mBACbK,kBAAkB,2BAAD,OAA6BL,EAA7B,mBACjBM,kBAAkB,2BAAD,OAA6BN,EAA7B,mBACjBO,kBAAkB,2BAAD,OAA6BP,EAA7B,mBACjBQ,mBAAmB,2BAAD,OAA6BR,EAA7B,sBAClBS,mBAAmB,2BAAD,OAA6BT,EAA7B,oB,sCCJLU,E,OAJCC,EAAMC,OAAO,CAC3BC,QAAS,iC,wCCyEIC,MAxEf,SAAgBC,GAAQ,IAQlBC,EARiB,EACaC,oBAAS,GADtB,mBACdC,EADc,KACHC,EADG,OAEeF,mBAAS,IAFxB,mBAEdG,EAFc,KAEFC,EAFE,KAIfC,EAAsB,WACtBF,GAAYD,GAAa,IA4B/B,OAlBAI,qBAAU,WACRC,IAAaT,EAAMU,WAChBC,MAAK,SAACC,GACDA,GACFN,EAAcM,EAASC,MAAM,MAAM,GAAGC,UAAU,EAAG,QAGtDC,OAAM,SAACC,GACNC,QAAQC,IAAR,uBAA4BlB,EAAMU,UAAlC,uBAEH,IASD,qBACES,UAAU,SACVC,YAAa,kBAAuBpB,EAAMU,eAxB5CT,EAAUoB,WAAWd,EAHH,OA4BhBe,WAAY,WACVC,aAAatB,GACbG,GAAa,IALjB,SAQGD,EACC,qBACEgB,UAAU,gBACVK,MAAO,CAAEC,gBAAgB,OAAD,OAASzB,EAAM0B,IAAf,MAF1B,SAIE,wBACEF,MAAO,CACLG,OAAQ,QAEVD,IACE,iCACArB,EADA,uCAIFuB,YAAY,IACZC,MAAM,eAIV,qBACEV,UAAWnB,EAAM8B,SAAW,cAAgB,GAC5CC,IAAK/B,EAAMU,UACXgB,IAAK1B,EAAM0B,IACXM,QAtCa,SAACC,GACpBA,EAAEC,OAAOC,QAAU,KACnBF,EAAEC,OAAOR,IACP,wECWSU,MAxCf,SAAapC,GACX,IAAMqC,EAAa,sCADD,EAGgBnC,mBAAS,IAHzB,mBAGXoC,EAHW,KAGAC,EAHA,KAelB,OAVA/B,qBAAU,YACO,uCAAG,4BAAAgC,EAAA,sEACK5C,EAAM6C,IAAIzC,EAAM0C,QADrB,cACVC,EADU,OAEhBJ,EAAaI,EAAOC,KAAKC,SAFT,kBAGTF,GAHS,2CAAH,qDAMfG,KACC,CAAC9C,EAAM0C,SAGR,sBAAKvB,UAAU,MAAf,UACE,6BAAKnB,EAAM+C,QACX,qBAAK5B,UAAU,cAAf,SACGmB,EAAUU,KAAI,SAACC,GACd,OACE,cAAC,EAAD,CAEEvC,UACEuC,EAAYC,gBAAkBD,EAAYE,cAE5CzB,IACE1B,EAAM8B,SAAN,UACOO,GADP,OACoBY,EAAYG,aADhC,UAEOf,GAFP,OAEoBY,EAAYI,eAElCvB,SAAU9B,EAAM8B,UATXmB,EAAYC,gBAAkBD,EAAYE,wB,MCyB9CG,MA/Cf,WACE,OACE,sBAAKnC,UAAU,OAAf,UACE,cAAC,EAAD,CACE4B,MAAM,oBACNL,OAAQa,EAAYnE,sBACpB0C,UAAU,IAEZ,cAAC,EAAD,CACEiB,MAAM,eACNL,OAAQa,EAAYpE,cACpB2C,UAAU,IAEZ,cAAC,EAAD,CACEiB,MAAM,YACNL,OAAQa,EAAYlE,cACpByC,UAAU,IAEZ,cAAC,EAAD,CACEiB,MAAM,gBACNL,OAAQa,EAAYjE,kBACpBwC,UAAU,IAEZ,cAAC,EAAD,CACEiB,MAAM,gBACNL,OAAQa,EAAYhE,kBACpBuC,UAAU,IAEZ,cAAC,EAAD,CACEiB,MAAM,gBACNL,OAAQa,EAAY/D,kBACpBsC,UAAU,IAEZ,cAAC,EAAD,CACEiB,MAAM,iBACNL,OAAQa,EAAY9D,mBACpBqC,UAAU,IAEZ,cAAC,EAAD,CACEiB,MAAM,gBACNL,OAAQa,EAAY7D,mBACpBoC,UAAU,QC9CH,G,YAAA,IAA0B,+CCwC1B0B,MApCf,WAAgB,IAAD,EACuBtD,oBAAS,GADhC,mBACNuD,EADM,KACMC,EADN,KAGPC,EAAc,WACdC,OAAOC,YAAc,KACvBH,GAAc,GAGZE,OAAOC,YAAc,KACvBH,GAAc,IAYlB,OARAlD,qBAAU,WAGR,OAFAoD,OAAOE,iBAAiB,SAAUH,GAE3B,WACLC,OAAOG,oBAAoB,SAAUJ,MAEtC,IAGD,sBACExC,UAAU,MACVK,MAAO,CAAEwC,gBAAiBP,EAAa,UAAY,MAFrD,UAIE,qBAAKtC,UAAU,WAAWO,IAAKuC,EAAalC,IAAI,iBAChD,qBACEZ,UAAU,WACVO,IAAI,+EACJK,IAAI,qB,gDCfGmC,MAjBf,SAAsBlE,GACpB,OACE,8BACE,yBACEwB,MAAO,CACLwC,gBACiB,QAAfhE,EAAMmE,MAAkB,QAAU,2BACpCC,MAAsB,QAAfpE,EAAMmE,MAAkB,QAAU,SAJ7C,UAOG,cAACnE,EAAMqE,KAAP,IACArE,EAAMmE,YCkBAG,MA1Bf,SAAoBtE,GAGlB,OAFAiB,QAAQC,IAAIlB,EAAMuE,MAGhB,sBAAKpD,UAAU,aAAf,UACE,6BAAKnB,EAAMuE,KAAKxB,QAChB,uBACA,mBAAG5B,UAAU,WAAb,SACGnB,EAAMuE,KAAKC,YAAYC,OANR,IAOZzE,EAAMuE,KAAKC,YACXxE,EAAMuE,KAAKC,YAAYE,OAAO,OAAS,EAAvC,UACG1E,EAAMuE,KAAKC,YAAYG,MACxB,EACA3E,EAAMuE,KAAKC,YAAYG,MAAM,EAXnB,KAWqCC,YAAY,KACzD,GAJJ,eAMG5E,EAAMuE,KAAKC,YAAYG,MAAM,EAdpB,KAQZ,UAQN,sBAAKxD,UAAU,gBAAf,UACE,cAAC,EAAD,CAAcgD,MAAO,OAAQE,KAAMQ,MACnC,cAAC,EAAD,CAAcV,MAAO,YAAaE,KAAMS,aC4BjCC,MA5Cf,WAAmB,IAAD,EACoB7E,mBAAS,MAD7B,mBACT8E,EADS,KACGC,EADH,KAGhBzE,qBAAU,YACiB,uCAAG,4BAAAgC,EAAA,sEACO5C,EAAM6C,IAAIc,EAAYpE,eAD7B,cACpB+F,EADoB,OAG1BD,EACEC,EAAmBtC,KAAKC,QACtBsC,SAASC,KAAKC,SAAWH,EAAmBtC,KAAKC,QAAQ4B,OAAS,KAL5C,kBASnBS,GATmB,2CAAH,qDAYzBI,KACC,IAEH,IAAMC,EACU,MAAdP,EAAA,eAtBe,uCAsBf,OACyBA,EAAW3B,cADpC,MAEI,KAEN,OACE,sBACElC,UAAU,SACVK,MAAO,CACLC,gBAAiB8D,GAHrB,UAME,cAAC,EAAD,IACCP,GACC,cAAC,EAAD,CACET,KAAM,CACJxB,MAAOiC,EAAW9B,gBAAkB8B,EAAW7B,cAC/CqB,YAAaQ,EAAWQ,gBC9BrBC,MATf,WACE,OACE,sBAAKtE,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCESuE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjF,MAAK,YAAkD,IAA/CkF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3c32ff75.chunk.js","sourcesContent":["const API_KEY = \"412a49befa2cef4fa57ee4d68eb7c1fd\";\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import axios from \"axios\";\r\n\r\nconst request = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default request;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport \"./Poster.css\";\r\n\r\nfunction Poster(props) {\r\n  const [delayFlag, setDelayFlag] = useState(false);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  const setDelayflagTimeout = () => {\r\n    if (trailerUrl) setDelayFlag(true);\r\n  };\r\n\r\n  let timeout;\r\n  const timeoutInMs = 800;\r\n\r\n  const mouseOverHandler = (movieName) => {\r\n    timeout = setTimeout(setDelayflagTimeout, timeoutInMs);\r\n  };\r\n\r\n  useEffect(() => {\r\n    movieTrailer(props.movieName)\r\n      .then((response) => {\r\n        if (response) {\r\n          setTrailerUrl(response.split(\"v=\")[1].substring(0, 11));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Cannot fetch ${props.movieName} trailer URL.`);\r\n      });\r\n  }, []);\r\n\r\n  const errorHandler = (e) => {\r\n    e.target.onerror = null;\r\n    e.target.src =\r\n      \"https://variety.com/wp-content/uploads/2020/05/netflix-logo.png\";\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"Poster\"\r\n      onMouseOver={() => mouseOverHandler(props.movieName)}\r\n      onMouseOut={() => {\r\n        clearTimeout(timeout);\r\n        setDelayFlag(false);\r\n      }}\r\n    >\r\n      {delayFlag ? (\r\n        <div\r\n          className=\"posterOnHover\"\r\n          style={{ backgroundImage: `url(${props.src})` }}\r\n        >\r\n          <iframe\r\n            style={{\r\n              height: \"100%\",\r\n            }}\r\n            src={\r\n              `https://www.youtube.com/embed/` +\r\n              trailerUrl +\r\n              `?autoplay=1&mute=1&controls=0&loop=1`\r\n            }\r\n            frameBorder=\"0\"\r\n            allow=\"autoplay\"\r\n          />\r\n        </div>\r\n      ) : (\r\n        <img\r\n          className={props.isPoster ? \"imgAsPoster\" : \"\"}\r\n          alt={props.movieName}\r\n          src={props.src}\r\n          onError={errorHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Poster;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../../../axios\";\r\nimport \"./Row.css\";\r\nimport Poster from \"./Poster/Poster\";\r\n\r\nfunction Row(props) {\r\n  const baseImgUrl = \"https://image.tmdb.org/t/p/original\";\r\n\r\n  const [movieList, setMovieList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getMovies = async function () {\r\n      const movies = await axios.get(props.getUrl);\r\n      setMovieList(movies.data.results);\r\n      return movies;\r\n    };\r\n\r\n    getMovies();\r\n  }, [props.getUrl]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h1>{props.title}</h1>\r\n      <div className=\"row_posters\">\r\n        {movieList.map((movieObject) => {\r\n          return (\r\n            <Poster\r\n              key={movieObject.original_title || movieObject.original_name}\r\n              movieName={\r\n                movieObject.original_title || movieObject.original_name\r\n              }\r\n              src={\r\n                props.isPoster\r\n                  ? `${baseImgUrl}${movieObject.poster_path}`\r\n                  : `${baseImgUrl}${movieObject.backdrop_path}`\r\n              }\r\n              isPoster={props.isPoster}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React from \"react\";\r\nimport Row from \"./Row/Row\";\r\nimport requestUrls from \"../../requests\";\r\nimport \"./Rows.css\";\r\n\r\nfunction Rows() {\r\n  return (\r\n    <div className=\"Rows\">\r\n      <Row\r\n        title=\"NETFLIX ORIGINALS\"\r\n        getUrl={requestUrls.fetchNetflixOriginals}\r\n        isPoster={true}\r\n      />\r\n      <Row\r\n        title=\"Trending Now\"\r\n        getUrl={requestUrls.fetchTrending}\r\n        isPoster={false}\r\n      />\r\n      <Row\r\n        title=\"Top Rated\"\r\n        getUrl={requestUrls.fetchTopRated}\r\n        isPoster={false}\r\n      />\r\n      <Row\r\n        title=\"Action Movies\"\r\n        getUrl={requestUrls.fetchActionMovies}\r\n        isPoster={false}\r\n      />\r\n      <Row\r\n        title=\"Comedy Movies\"\r\n        getUrl={requestUrls.fetchComedyMovies}\r\n        isPoster={false}\r\n      />\r\n      <Row\r\n        title=\"Horror Movies\"\r\n        getUrl={requestUrls.fetchHorrorMovies}\r\n        isPoster={false}\r\n      />\r\n      <Row\r\n        title=\"Romance Movies\"\r\n        getUrl={requestUrls.fetchRomanceMovies}\r\n        isPoster={false}\r\n      />\r\n      <Row\r\n        title=\"Documentaries\"\r\n        getUrl={requestUrls.fetchDocumentaries}\r\n        isPoster={false}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rows;\r\n","export default __webpack_public_path__ + \"static/media/Netflix-Logo-PNG3.a3092e10.png\";","import React, { useEffect, useState } from \"react\";\r\nimport \"./Nav.css\";\r\nimport NetflixLogo from \"../../Netflix-Logo-PNG3.png\";\r\n\r\nfunction Nav() {\r\n  const [scrollFlag, setScrollFlag] = useState(false);\r\n\r\n  const scrollEvent = () => {\r\n    if (window.pageYOffset < 780) {\r\n      setScrollFlag(false);\r\n    }\r\n\r\n    if (window.pageYOffset > 780) {\r\n      setScrollFlag(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", scrollEvent);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", scrollEvent);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"Nav\"\r\n      style={{ backgroundColor: scrollFlag ? \"#141414\" : null }}\r\n    >\r\n      <img className=\"Nav_logo\" src={NetflixLogo} alt=\"Netflix logo\" />\r\n      <img\r\n        className=\"Nav_icon\"\r\n        src=\"https://i.pinimg.com/originals/30/db/47/30db479e1558c3ed46b4ed23b3cd98ae.png\"\r\n        alt=\"Profile Icon\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"./HeaderButton.css\";\r\nfunction HeaderButton(props) {\r\n  return (\r\n    <div>\r\n      <button\r\n        style={{\r\n          backgroundColor:\r\n            props.label == \"Play\" ? \"white\" : \"rgba(169, 169, 169, 0.5)\",\r\n          color: props.label == \"Play\" ? \"black\" : \"white\",\r\n        }}\r\n      >\r\n        {<props.icon></props.icon>}\r\n        {props.label}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeaderButton;\r\n","import React from \"react\";\r\nimport \"./HeaderInfo.css\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport HeaderButton from \"../HeaderButton/HeaderButton\";\r\nfunction HeaderInfo(props) {\r\n  console.log(props.info);\r\n  const maxCharacters = 400;\r\n  return (\r\n    <div className=\"HeaderInfo\">\r\n      <h1>{props.info.title}</h1>\r\n      <br />\r\n      <p className=\"overview\">\r\n        {props.info.description.length < maxCharacters\r\n          ? props.info.description\r\n          : props.info.description.search(\"\\\\.\") > 0\r\n          ? `${props.info.description.slice(\r\n              0,\r\n              props.info.description.slice(0, maxCharacters).lastIndexOf(\".\") +\r\n                1\r\n            )} `\r\n          : `${props.info.description.slice(0, maxCharacters)} ...`}\r\n      </p>\r\n      <div className=\"HeaderButtons\">\r\n        <HeaderButton label={\"Play\"} icon={PlayArrowIcon} />\r\n        <HeaderButton label={\"More Info\"} icon={InfoIcon} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeaderInfo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport requestUrls from \"../../requests\";\r\nimport axios from \"../../axios\";\r\nimport \"./Header.css\";\r\nimport Nav from \"../Nav/Nav\";\r\nimport HeaderInfo from \"./HeaderInfo/HeaderInfo\";\r\n\r\nconst baseImgUrl = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Header() {\r\n  const [headerBack, setHeaderBack] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getRandomBackground = async function () {\r\n      const backgroundsObjects = await axios.get(requestUrls.fetchTrending);\r\n\r\n      setHeaderBack(\r\n        backgroundsObjects.data.results[\r\n          parseInt(Math.random() * backgroundsObjects.data.results.length - 1)\r\n        ]\r\n      );\r\n\r\n      return backgroundsObjects;\r\n    };\r\n\r\n    getRandomBackground();\r\n  }, []);\r\n\r\n  const backgroundPath =\r\n    headerBack != null\r\n      ? `url(\"${baseImgUrl}${headerBack.backdrop_path}\")`\r\n      : null;\r\n\r\n  return (\r\n    <div\r\n      className=\"header\"\r\n      style={{\r\n        backgroundImage: backgroundPath,\r\n      }}\r\n    >\r\n      <Nav />\r\n      {headerBack && (\r\n        <HeaderInfo\r\n          info={{\r\n            title: headerBack.original_title || headerBack.original_name,\r\n            description: headerBack.overview,\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import \"./App.css\";\nimport requests from \"./requests\";\nimport \"./Components/Rows/Row/Row\";\nimport Rows from \"./Components/Rows/Rows\";\nimport Header from \"./Components/Header/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Rows />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
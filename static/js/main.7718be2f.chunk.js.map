{"version":3,"sources":["requests.js","axios.js","Components/Rows/Row/Poster/Poster.js","Components/Rows/Row/Row.js","Components/Rows/Rows.js","Netflix-Logo-PNG3.png","Components/Nav/Nav.js","Components/Header/HeaderButton/HeaderButton.js","Components/Header/HeaderInfo/HeaderInfo.js","Components/Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","request","axios","create","baseURL","Poster","props","useState","trailerUrl","setTrailerUrl","baseImgUrl","movieName","movieObject","original_title","original_name","posterpath","isPoster","poster_path","backdrop_path","useEffect","movieTrailer","then","response","split","substring","catch","error","console","log","className","onClick","showMovieInfoOnClick","alt","src","onError","e","target","onerror","Row","movieList","setMovieList","movieProfileObject","setMovieProfileObject","showMovieInfo","tempMovieObject","activeRowChangeHandler","title","a","get","getUrl","movies","data","results","getMovies","map","style","height","currentActiveRow","display","window","innerWidth","overview","length","search","slice","lastIndexOf","description","width","frameBorder","allow","minHeight","transform","stopPropagation","maxHeight","boxSizing","paddingLeft","fontSize","Rows","activeRow","setActiveRow","setCurrentActiveRow","rowName","requestUrls","Nav","scrollFlag","setScrollFlag","scrollEvent","pageYOffset","addEventListener","removeEventListener","backgroundColor","opacity","NetflixLogo","HeaderButton","label","color","icon","HeaderInfo","info","PlayArrowIcon","InfoIcon","Header","headerBack","setHeaderBack","backgroundsObjects","parseInt","Math","random","getRandomBackground","backgroundPath","backgroundImage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7718be2f.chunk.js","sourcesContent":["const API_KEY = \"412a49befa2cef4fa57ee4d68eb7c1fd\";\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import axios from \"axios\";\r\n\r\nconst request = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default request;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport \"./Poster.css\";\r\n\r\nfunction Poster(props) {\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  const baseImgUrl = \"https://image.tmdb.org/t/p/original\";\r\n\r\n  const movieName =\r\n    props.movieObject.original_title || props.movieObject.original_name;\r\n  const posterpath = props.isPoster\r\n    ? `${baseImgUrl}${props.movieObject.poster_path}`\r\n    : `${baseImgUrl}${props.movieObject.backdrop_path}`;\r\n\r\n  useEffect(() => {\r\n    if (!trailerUrl) {\r\n      movieTrailer(movieName)\r\n        .then((response) => {\r\n          if (response) {\r\n            setTrailerUrl(response.split(\"v=\")[1].substring(0, 11));\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(`Cannot fetch ${movieName} trailer URL.`);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const errorHandler = (e) => {\r\n    e.target.onerror = null;\r\n    e.target.src =\r\n      \"https://variety.com/wp-content/uploads/2020/05/netflix-logo.png\";\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"Poster\"\r\n      onClick={() => {\r\n        console.log(trailerUrl);\r\n        props.showMovieInfoOnClick({\r\n          ...props.movieObject,\r\n          trailerUrl: trailerUrl,\r\n          isPoster: props.isPoster,\r\n        });\r\n      }}\r\n    >\r\n      <img\r\n        className={props.isPoster ? \"imgAsPoster\" : \"\"}\r\n        alt={movieName}\r\n        src={posterpath}\r\n        onError={errorHandler}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Poster;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"../../../axios\";\r\nimport \"./Row.css\";\r\nimport Poster from \"./Poster/Poster\";\r\n\r\nfunction Row(props) {\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [movieProfileObject, setMovieProfileObject] = useState(false);\r\n  const maxCharacters = 400;\r\n  const baseImgUrl = \"https://image.tmdb.org/t/p/original\";\r\n\r\n  const showMovieInfo = (tempMovieObject) => {\r\n    console.log(tempMovieObject);\r\n\r\n    setMovieProfileObject(tempMovieObject);\r\n    props.activeRowChangeHandler(props.title);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getMovies = async function () {\r\n      const movies = await axios.get(props.getUrl);\r\n      setMovieList(movies.data.results);\r\n      return movies;\r\n    };\r\n\r\n    getMovies();\r\n  }, [props.getUrl]);\r\n\r\n  const errorHandler = (e) => {\r\n    e.target.onerror = null;\r\n    e.target.src =\r\n      \"https://variety.com/wp-content/uploads/2020/05/netflix-logo.png\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h1>{props.title}</h1>\r\n      <div className=\"row_posters\">\r\n        {movieList.map((movieObject) => {\r\n          return (\r\n            <Poster\r\n              key={movieObject.original_title || movieObject.original_name}\r\n              movieObject={movieObject}\r\n              isPoster={props.isPoster}\r\n              showMovieInfoOnClick={showMovieInfo}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div\r\n        className=\"movie_info\"\r\n        style={{\r\n          height: props.currentActiveRow == props.title ? null : \"0vw\",\r\n          display: window.innerWidth <= 768 ? \"none\" : null,\r\n        }}\r\n      >\r\n        {props.currentActiveRow == props.title && (\r\n          <>\r\n            <div className=\"description\">\r\n              <h1>\r\n                {movieProfileObject.original_title ||\r\n                  movieProfileObject.original_name}\r\n              </h1>\r\n              <p className=\"overview\">\r\n                {movieProfileObject.overview.length < maxCharacters\r\n                  ? movieProfileObject.overview\r\n                  : movieProfileObject.overview.search(\"\\\\.\") > 0\r\n                  ? `${movieProfileObject.overview.slice(\r\n                      0,\r\n                      movieProfileObject.overview\r\n                        .slice(0, maxCharacters)\r\n                        .lastIndexOf(\".\") + 1\r\n                    )} `\r\n                  : `${movieProfileObject.description.slice(\r\n                      0,\r\n                      maxCharacters\r\n                    )} ...`}\r\n              </p>\r\n            </div>\r\n            <div className=\"media\">\r\n              {movieProfileObject.trailerUrl ? (\r\n                <iframe\r\n                  style={{\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                  }}\r\n                  src={\r\n                    `https://www.youtube.com/embed/` +\r\n                    movieProfileObject.trailerUrl +\r\n                    `?autoplay=1&mute=1&controls=0&loop=1`\r\n                  }\r\n                  frameBorder=\"0\"\r\n                  allow=\"autoplay\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  alt={\r\n                    movieProfileObject.original_title ||\r\n                    movieProfileObject.original_name\r\n                  }\r\n                  src={`${baseImgUrl}${movieProfileObject.backdrop_path}`}\r\n                  onError={errorHandler}\r\n                />\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <div\r\n        className=\"mobile_info\"\r\n        style={{\r\n          minHeight: props.currentActiveRow == props.title ? \"100vh\" : \"0vh\",\r\n          height: props.currentActiveRow == props.title ? \"100%\" : \"0%\",\r\n          transform:\r\n            props.currentActiveRow == props.title\r\n              ? \"translateY(0vh)\"\r\n              : \"translateY(300vh)\",\r\n        }}\r\n        onClick={() => {\r\n          props.activeRowChangeHandler(null);\r\n        }}\r\n      >\r\n        <div\r\n          className=\"mobile_info_main\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n          }}\r\n        >\r\n          <div className=\"mobile_description\">\r\n            <img\r\n              src={`${baseImgUrl}${movieProfileObject.poster_path}`}\r\n              style={{ maxHeight: \"20vh\", boxSizing: \"fill\" }}\r\n            />\r\n            <p style={{ paddingLeft: \"2vw\", fontSize: \"3vw\" }}>\r\n              {movieProfileObject.overview}\r\n            </p>\r\n          </div>\r\n          <iframe\r\n            style={{\r\n              maxHeight: \"30vh\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n            }}\r\n            src={\r\n              `https://www.youtube.com/embed/` +\r\n              movieProfileObject.trailerUrl +\r\n              `?autoplay=1&mute=1&controls=0&loop=1`\r\n            }\r\n            frameBorder=\"0\"\r\n            allow=\"autoplay\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React, { useState } from \"react\";\r\nimport Row from \"./Row/Row\";\r\nimport requestUrls from \"../../requests\";\r\nimport \"./Rows.css\";\r\n\r\nfunction Rows() {\r\n  const [activeRow, setActiveRow] = useState();\r\n\r\n  const setCurrentActiveRow = (rowName) => {\r\n    console.log(\"Active row :\" + rowName);\r\n    setActiveRow(rowName);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Rows\">\r\n      <Row\r\n        title=\"NETFLIX ORIGINALS\"\r\n        getUrl={requestUrls.fetchNetflixOriginals}\r\n        isPoster={true}\r\n        currentActiveRow={activeRow}\r\n        activeRowChangeHandler={setCurrentActiveRow}\r\n      />\r\n      <Row\r\n        title=\"Trending Now\"\r\n        getUrl={requestUrls.fetchTrending}\r\n        isPoster={false}\r\n        currentActiveRow={activeRow}\r\n        activeRowChangeHandler={setCurrentActiveRow}\r\n      />\r\n      <Row\r\n        title=\"Top Rated\"\r\n        getUrl={requestUrls.fetchTopRated}\r\n        isPoster={false}\r\n        currentActiveRow={activeRow}\r\n        activeRowChangeHandler={setCurrentActiveRow}\r\n      />\r\n      <Row\r\n        title=\"Action Movies\"\r\n        getUrl={requestUrls.fetchActionMovies}\r\n        isPoster={false}\r\n        currentActiveRow={activeRow}\r\n        activeRowChangeHandler={setCurrentActiveRow}\r\n      />\r\n      <Row\r\n        title=\"Comedy Movies\"\r\n        getUrl={requestUrls.fetchComedyMovies}\r\n        isPoster={false}\r\n        currentActiveRow={activeRow}\r\n        activeRowChangeHandler={setCurrentActiveRow}\r\n      />\r\n      <Row\r\n        title=\"Horror Movies\"\r\n        getUrl={requestUrls.fetchHorrorMovies}\r\n        isPoster={false}\r\n        currentActiveRow={activeRow}\r\n        activeRowChangeHandler={setCurrentActiveRow}\r\n      />\r\n      <Row\r\n        title=\"Romance Movies\"\r\n        getUrl={requestUrls.fetchRomanceMovies}\r\n        isPoster={false}\r\n        currentActiveRow={activeRow}\r\n        activeRowChangeHandler={setCurrentActiveRow}\r\n      />\r\n      <Row\r\n        title=\"Documentaries\"\r\n        getUrl={requestUrls.fetchDocumentaries}\r\n        isPoster={false}\r\n        currentActiveRow={activeRow}\r\n        activeRowChangeHandler={setCurrentActiveRow}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rows;\r\n","export default __webpack_public_path__ + \"static/media/Netflix-Logo-PNG3.a3092e10.png\";","import React, { useEffect, useState } from \"react\";\r\nimport \"./Nav.css\";\r\nimport NetflixLogo from \"../../Netflix-Logo-PNG3.png\";\r\n\r\nfunction Nav() {\r\n  const [scrollFlag, setScrollFlag] = useState(false);\r\n\r\n  const scrollEvent = () => {\r\n    if (window.pageYOffset < 780) {\r\n      setScrollFlag(false);\r\n    }\r\n\r\n    if (window.pageYOffset > 780) {\r\n      setScrollFlag(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", scrollEvent);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", scrollEvent);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"Nav\"\r\n      style={{\r\n        backgroundColor: scrollFlag ? \"#141414\" : null,\r\n        opacity: \"0.85\",\r\n      }}\r\n    >\r\n      <img className=\"Nav_logo\" src={NetflixLogo} alt=\"Netflix logo\" />\r\n      <img\r\n        className=\"Nav_icon\"\r\n        src=\"https://i.pinimg.com/originals/30/db/47/30db479e1558c3ed46b4ed23b3cd98ae.png\"\r\n        alt=\"Profile Icon\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"./HeaderButton.css\";\r\nfunction HeaderButton(props) {\r\n  return (\r\n    <div>\r\n      <button\r\n        style={{\r\n          backgroundColor:\r\n            props.label == \"Play\" ? \"white\" : \"rgba(169, 169, 169, 0.5)\",\r\n          color: props.label == \"Play\" ? \"black\" : \"white\",\r\n        }}\r\n      >\r\n        {<props.icon></props.icon>}\r\n        {props.label}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeaderButton;\r\n","import React from \"react\";\r\nimport \"./HeaderInfo.css\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport HeaderButton from \"../HeaderButton/HeaderButton\";\r\nfunction HeaderInfo(props) {\r\n  const maxCharacters = 250;\r\n  return (\r\n    <div className=\"HeaderInfo\">\r\n      <h1>{props.info.title}</h1>\r\n      <p className=\"overview\">\r\n        {props.info.description.length < maxCharacters\r\n          ? props.info.description\r\n          : props.info.description.search(\"\\\\.\") > 0\r\n          ? `${props.info.description.slice(\r\n              0,\r\n              props.info.description.slice(0, maxCharacters).lastIndexOf(\".\") +\r\n                1\r\n            )} `\r\n          : `${props.info.description.slice(0, maxCharacters)} ...`}\r\n      </p>\r\n      <div className=\"HeaderButtons\">\r\n        <HeaderButton label={\"Play\"} icon={PlayArrowIcon} />\r\n        <HeaderButton label={\"More Info\"} icon={InfoIcon} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeaderInfo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport requestUrls from \"../../requests\";\r\nimport axios from \"../../axios\";\r\nimport \"./Header.css\";\r\nimport Nav from \"../Nav/Nav\";\r\nimport HeaderInfo from \"./HeaderInfo/HeaderInfo\";\r\n\r\nconst baseImgUrl = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Header() {\r\n  const [headerBack, setHeaderBack] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getRandomBackground = async function () {\r\n      const backgroundsObjects = await axios.get(requestUrls.fetchTrending);\r\n\r\n      setHeaderBack(\r\n        backgroundsObjects.data.results[\r\n          parseInt(Math.random() * backgroundsObjects.data.results.length - 1)\r\n        ]\r\n      );\r\n\r\n      return backgroundsObjects;\r\n    };\r\n\r\n    getRandomBackground();\r\n  }, []);\r\n\r\n  console.log(headerBack);\r\n\r\n  const backgroundPath =\r\n    headerBack != null\r\n      ? window.innerWidth <= 768\r\n        ? `url(\"${baseImgUrl}${headerBack.poster_path}\")`\r\n        : `url(\"${baseImgUrl}${headerBack.backdrop_path}\")`\r\n      : null;\r\n\r\n  return (\r\n    <div\r\n      className=\"header\"\r\n      style={{\r\n        backgroundImage: backgroundPath,\r\n      }}\r\n    >\r\n      <Nav />\r\n      {headerBack && (\r\n        <HeaderInfo\r\n          info={{\r\n            title: headerBack.original_title || headerBack.original_name,\r\n            description: headerBack.overview,\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import \"./App.css\";\nimport requests from \"./requests\";\nimport \"./Components/Rows/Row/Row\";\nimport Rows from \"./Components/Rows/Rows\";\nimport Header from \"./Components/Header/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Rows />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}